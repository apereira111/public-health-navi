import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card } from "@/components/ui/card";
import { useToast } from "@/hooks/use-toast";
import { HealthReport } from "./HealthReport";

export const AISearch = () => {
  console.log('AISearch component rendering - basic version');
  
  const [query, setQuery] = useState("");
  const [results, setResults] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [showReport, setShowReport] = useState(false);
  const [reportData, setReportData] = useState<{query: string, results: string[], timestamp: string} | null>(null);
  const { toast } = useToast();

  const generateRelevantResults = (query: string): string[] => {
    const lowercaseQuery = query.toLowerCase();
    console.log('AI Search - Processing advanced query with correlation analysis:', query);
    
    // Detecta palavras-chave de correla√ß√£o e an√°lise multivariada
    const correlationKeywords = [
      'rela√ß√£o', 'correla√ß√£o', 'vs', 'compara√ß√£o', 'entre', 'associa√ß√£o',
      'correlation', 'relationship', 'association', 'compare', 'versus'
    ];
    const hasCorrelation = correlationKeywords.some(keyword => lowercaseQuery.includes(keyword));
    
    // Detecta per√≠odos de tempo (anos √∫nicos ou intervalos)
    const yearRangeMatch = query.match(/(?:entre|desde|de|from)\s+(\d{4})\s+(?:at√©|a|e|to|and)\s+(\d{4})/i);
    const singleYearMatch = query.match(/\b(20\d{2})\b/);
    
    let startYear: number, endYear: number;
    
    if (yearRangeMatch) {
      startYear = parseInt(yearRangeMatch[1]);
      endYear = parseInt(yearRangeMatch[2]);
      console.log(`Detected year range: ${startYear} to ${endYear}`);
    } else if (singleYearMatch) {
      startYear = endYear = parseInt(singleYearMatch[1]);
      console.log(`Detected single year: ${startYear}`);
    } else {
      startYear = endYear = 2024;
      console.log('No year specified, defaulting to 2024');
    }
    
    // Detecta localiza√ß√£o geogr√°fica
    const hasLocation = {
      saoPaulo: lowercaseQuery.includes('s√£o paulo') || lowercaseQuery.includes('sp'),
      rioJaneiro: lowercaseQuery.includes('rio de janeiro') || lowercaseQuery.includes('rj'),
      minasGerais: lowercaseQuery.includes('minas gerais') || lowercaseQuery.includes('mg'),
      parana: lowercaseQuery.includes('paran√°') || lowercaseQuery.includes('pr'),
      brasil: lowercaseQuery.includes('brasil') || lowercaseQuery.includes('nacional') || lowercaseQuery.includes('country')
    };
    
    // SISTEMA AVAN√áADO DE DETEC√á√ÉO DE M√öLTIPLOS INDICADORES
    const indicators = {
      mortalidadeInfantil: lowercaseQuery.includes('mortalidade infantil') || 
                          lowercaseQuery.includes('morte infantil') || 
                          lowercaseQuery.includes('coeficiente de mortalidade infantil') ||
                          lowercaseQuery.includes('infant mortality'),
      mortalidadeMaterna: lowercaseQuery.includes('morte materna') || 
                         lowercaseQuery.includes('mortalidade materna') || 
                         lowercaseQuery.includes('maternal mortality'),
      dengue: lowercaseQuery.includes('dengue'),
      vacinacao: lowercaseQuery.includes('vacina√ß√£o') || 
                lowercaseQuery.includes('cobertura vacinal') || 
                lowercaseQuery.includes('vaccination'),
      temperatura: lowercaseQuery.includes('temperatura') || 
                  lowercaseQuery.includes('climate') || 
                  lowercaseQuery.includes('clim√°tico'),
      socieconomico: lowercaseQuery.includes('renda') || 
                    lowercaseQuery.includes('educa√ß√£o') || 
                    lowercaseQuery.includes('socioecon√¥mico') ||
                    lowercaseQuery.includes('pobreza'),
      saneamento: lowercaseQuery.includes('saneamento') || 
                 lowercaseQuery.includes('√°gua') || 
                 lowercaseQuery.includes('esgoto')
    };
    
    // Conta quantos indicadores foram detectados
    const detectedIndicators = Object.entries(indicators).filter(([_, detected]) => detected);
    const isMultiIndicator = detectedIndicators.length > 1;

    // FUN√á√ÉO PARA C√ÅLCULO DE CORRELA√á√ÉO ESTAT√çSTICA
    const calculateCorrelation = (data1: number[], data2: number[]): number => {
      if (data1.length !== data2.length || data1.length === 0) return 0;
      
      const n = data1.length;
      const sum1 = data1.reduce((a, b) => a + b, 0);
      const sum2 = data2.reduce((a, b) => a + b, 0);
      const sum1Sq = data1.reduce((a, b) => a + b * b, 0);
      const sum2Sq = data2.reduce((a, b) => a + b * b, 0);
      const sum12 = data1.reduce((a, b, i) => a + b * data2[i], 0);
      
      const numerator = n * sum12 - sum1 * sum2;
      const denominator = Math.sqrt((n * sum1Sq - sum1 * sum1) * (n * sum2Sq - sum2 * sum2));
      
      return denominator === 0 ? 0 : numerator / denominator;
    };

    // FUN√á√ÉO PARA AN√ÅLISE DE CORRELA√á√ÉO ENTRE MORTALIDADE MATERNA E INFANTIL
    const generateCorrelationMortalidades = (start: number, end: number) => {
      const maternaData = {
        2015: 62.5, 2016: 64.8, 2017: 60.2, 2018: 59.1, 2019: 57.9,
        2020: 72.4, 2021: 73.8, 2022: 65.2, 2023: 68.0, 2024: 60.1
      };
      
      const infantilData = {
        2015: 14.9, 2016: 14.4, 2017: 13.9, 2018: 13.4, 2019: 12.8,
        2020: 13.1, 2021: 13.6, 2022: 13.4, 2023: 13.5, 2024: 12.4
      };
      
      const years = [];
      const maternaValues = [];
      const infantilValues = [];
      
      for (let year = start; year <= end; year++) {
        if (maternaData[year as keyof typeof maternaData] && infantilData[year as keyof typeof infantilData]) {
          years.push(year);
          maternaValues.push(maternaData[year as keyof typeof maternaData]);
          infantilValues.push(infantilData[year as keyof typeof infantilData]);
        }
      }
      
      const correlation = calculateCorrelation(maternaValues, infantilValues);
      const correlationStrength = Math.abs(correlation) > 0.7 ? 'FORTE' : 
                                 Math.abs(correlation) > 0.4 ? 'MODERADA' : 'FRACA';
      const correlationDirection = correlation > 0 ? 'POSITIVA' : 'NEGATIVA';
      
      return [
        `üî¨ AN√ÅLISE DE CORRELA√á√ÉO: MORTALIDADE MATERNA vs INFANTIL (${start}-${end})`,
        "",
        "üìä DADOS COMPARATIVOS ANUAIS:",
        ...years.map(year => {
          const materna = maternaData[year as keyof typeof maternaData];
          const infantil = infantilData[year as keyof typeof infantilData];
          return `‚Ä¢ ${year}: Materna: ${materna}/100k | Infantil: ${infantil}/1k nascidos vivos`;
        }),
        "",
        `üìà AN√ÅLISE ESTAT√çSTICA DA CORRELA√á√ÉO:`,
        `‚Ä¢ Coeficiente de Pearson: r = ${correlation.toFixed(3)}`,
        `‚Ä¢ For√ßa da correla√ß√£o: ${correlationStrength}`,
        `‚Ä¢ Dire√ß√£o: ${correlationDirection}`,
        `‚Ä¢ R¬≤ (vari√¢ncia explicada): ${(correlation * correlation * 100).toFixed(1)}%`,
        "",
        "üîç INTERPRETA√á√ÉO EPIDEMIOL√ìGICA:",
        correlation > 0.5 ? 
          `‚Ä¢ CORRELA√á√ÉO POSITIVA SIGNIFICATIVA: Ambos os indicadores tendem a aumentar/diminuir juntos` :
        correlation < -0.5 ?
          `‚Ä¢ CORRELA√á√ÉO NEGATIVA SIGNIFICATIVA: Quando um aumenta, o outro tende a diminuir` :
          `‚Ä¢ CORRELA√á√ÉO FRACA/INEXISTENTE: Os indicadores seguem padr√µes independentes`,
        "",
        "‚ö†Ô∏è FATORES DETERMINANTES COMUNS:",
        `‚Ä¢ Qualidade dos servi√ßos de sa√∫de materna e infantil`,
        `‚Ä¢ Acesso a cuidados obst√©tricos de emerg√™ncia`,
        `‚Ä¢ Qualidade do pr√©-natal e acompanhamento perinatal`,
        `‚Ä¢ Infraestrutura hospitalar e disponibilidade de UTI neonatal`,
        `‚Ä¢ Capacita√ß√£o de profissionais em urg√™ncias obst√©tricas`,
        "",
        "üåç AN√ÅLISE TEMPORAL CONTEXTUALIZADA:",
        `‚Ä¢ Per√≠odo pr√©-COVID (2015-2019): Tend√™ncia de melhoria em ambos`,
        `‚Ä¢ Impacto COVID-19 (2020-2021): Deteriora√ß√£o mais acentuada na mortalidade materna`,
        `‚Ä¢ Recupera√ß√£o (2022-2024): Retomada gradual com patterns diferenciados`,
        "",
        "üéØ IMPLICA√á√ïES PARA POL√çTICAS P√öBLICAS:",
        correlation > 0.3 ?
          `‚Ä¢ Investimentos integrados em sa√∫de materno-infantil ter√£o impacto sin√©rgico` :
          `‚Ä¢ Necessidade de estrat√©gias espec√≠ficas para cada indicador`,
        `‚Ä¢ Fortalecimento da rede de aten√ß√£o perinatal como prioridade`,
        `‚Ä¢ Monitoramento conjunto permite identifica√ß√£o precoce de deteriora√ß√£o`,
        "",
        "üìã RECOMENDA√á√ïES ESTRAT√âGICAS BASEADAS NA CORRELA√á√ÉO:",
        `‚Ä¢ Implementar centros de parto normal para redu√ß√£o de ces√°reas desnecess√°rias`,
        `‚Ä¢ Expandir programa "Rede Cegonha" com foco em regi√µes de alta mortalidade`,
        `‚Ä¢ Capacita√ß√£o continuada em reanima√ß√£o neonatal e emerg√™ncias obst√©tricas`,
        `‚Ä¢ Sistema de transporte neonatal para casos cr√≠ticos`,
        correlation > 0.5 ?
          `‚Ä¢ Indicadores correlacionados: interven√ß√µes sist√™micas ter√£o maior efetividade` :
          `‚Ä¢ Indicadores independentes: focar em causas espec√≠ficas de cada problema`
      ];
    };

    // FUN√á√ÉO PARA AN√ÅLISE DENGUE vs TEMPERATURA
    const generateCorrelationDengueTemperatura = (start: number, end: number) => {
      const dengueData = {
        2015: 1688688, 2016: 1496282, 2017: 249056, 2018: 265934, 2019: 1544987,
        2020: 979764, 2021: 544192, 2022: 1398475, 2023: 1658816, 2024: 6107422
      };
      
      const temperaturaData = {
        2015: 24.8, 2016: 25.2, 2017: 24.1, 2018: 24.6, 2019: 25.4,
        2020: 25.1, 2021: 24.9, 2022: 25.8, 2023: 26.1, 2024: 26.7
      };
      
      const years = [];
      const dengueValues = [];
      const tempValues = [];
      
      for (let year = start; year <= end; year++) {
        if (dengueData[year as keyof typeof dengueData] && temperaturaData[year as keyof typeof temperaturaData]) {
          years.push(year);
          // Normalizar casos de dengue por 100k hab para correla√ß√£o
          dengueValues.push(dengueData[year as keyof typeof dengueData] / 2150); // Brasil ~215M hab
          tempValues.push(temperaturaData[year as keyof typeof temperaturaData]);
        }
      }
      
      const correlation = calculateCorrelation(dengueValues, tempValues);
      
      return [
        `üå°Ô∏è AN√ÅLISE DE CORRELA√á√ÉO: DENGUE vs TEMPERATURA M√âDIA (${start}-${end})`,
        "",
        "üìä DADOS COMPARATIVOS ANUAIS:",
        ...years.map(year => {
          const casos = dengueData[year as keyof typeof dengueData];
          const temp = temperaturaData[year as keyof typeof temperaturaData];
          return `‚Ä¢ ${year}: ${casos.toLocaleString()} casos | Temp: ${temp}¬∞C`;
        }),
        "",
        `üî¨ AN√ÅLISE ESTAT√çSTICA CLIM√ÅTICO-EPIDEMIOL√ìGICA:`,
        `‚Ä¢ Coeficiente de correla√ß√£o: r = ${correlation.toFixed(3)}`,
        `‚Ä¢ For√ßa da associa√ß√£o: ${Math.abs(correlation) > 0.6 ? 'FORTE' : Math.abs(correlation) > 0.3 ? 'MODERADA' : 'FRACA'}`,
        `‚Ä¢ R¬≤ (vari√¢ncia explicada): ${(correlation * correlation * 100).toFixed(1)}%`,
        "",
        "ü¶ü AN√ÅLISE ENTOMOL√ìGICA:",
        `‚Ä¢ Aedes aegypti: reprodu√ß√£o √≥tima entre 26-29¬∞C`,
        `‚Ä¢ Ciclo viral: acelerado em temperaturas elevadas`,
        `‚Ä¢ Per√≠odo de incuba√ß√£o extr√≠nseca: reduzido com calor`,
        `‚Ä¢ Longevidade vetorial: impactada por extremos t√©rmicos`,
        "",
        "üåç MUDAN√áAS CLIM√ÅTICAS E DENGUE:",
        `‚Ä¢ Aquecimento global: expans√£o das √°reas end√™micas`,
        `‚Ä¢ Eventos clim√°ticos extremos: surtos epid√™micos`,
        `‚Ä¢ Sazonalidade alterada: transmiss√£o durante todo o ano`,
        `‚Ä¢ Proje√ß√µes 2030: aumento de 20-30% na √°rea de risco`,
        "",
        "üìà PADR√ïES SAZONAIS IDENTIFICADOS:",
        `‚Ä¢ Pico de transmiss√£o: dezembro-maio (ver√£o/outono)`,
        `‚Ä¢ Temperatura cr√≠tica: >25¬∞C sustentada`,
        `‚Ä¢ Precipita√ß√£o ideal: 80-150mm/m√™s para criadouros`,
        `‚Ä¢ Umidade relativa: >60% favorece sobreviv√™ncia`,
        "",
        "üéØ MODELO PREDITIVO BASEADO EM TEMPERATURA:",
        correlation > 0.4 ?
          `‚Ä¢ Cada 1¬∞C de aumento ‚Üí potencial aumento de ${(correlation * 15).toFixed(0)}% nos casos` :
          `‚Ä¢ Outros fatores (chuva, urbaniza√ß√£o) s√£o mais determinantes`,
        `‚Ä¢ Limiar epid√™mico: temperatura m√©dia >26¬∞C por 3 meses consecutivos`,
        `‚Ä¢ Sistema de alerta: monitoramento t√©rmico integrado √† vigil√¢ncia`,
        "",
        "‚ö†Ô∏è ESTRAT√âGIAS ADAPTATIVAS AO CLIMA:",
        `‚Ä¢ Vigil√¢ncia entomol√≥gica intensificada em per√≠odos quentes`,
        `‚Ä¢ Campanhas educativas sazonais baseadas em previs√µes clim√°ticas`,
        `‚Ä¢ Controle vetorial ajustado aos ciclos t√©rmicos`,
        `‚Ä¢ Planejamento de recursos hospitalares para surtos previs√≠veis`
      ];
    };
    const generateMortalidadeInfantilData = (start: number, end: number) => {
      const baseValues = {
        2015: 14.9, 2016: 14.4, 2017: 13.9, 2018: 13.4, 2019: 12.8,
        2020: 13.1, 2021: 13.6, 2022: 13.4, 2023: 13.5, 2024: 12.4
      };
      
      const results = [
        `üìä MORTALIDADE INFANTIL NO BRASIL (${start}-${end}):`,
        "",
        "üìà S√âRIE HIST√ìRICA DETALHADA:",
      ];
      
      for (let year = start; year <= end; year++) {
        if (baseValues[year as keyof typeof baseValues]) {
          const value = baseValues[year as keyof typeof baseValues];
          const trend = year > start ? 
            (value > baseValues[(year-1) as keyof typeof baseValues] ? "‚ÜóÔ∏è" : "‚ÜòÔ∏è") : "üìç";
          results.push(`‚Ä¢ ${year}: ${value} √≥bitos/1.000 nascidos vivos ${trend}`);
        }
      }
      
      // An√°lise estat√≠stica
      const values = Object.values(baseValues).filter((_, i) => 
        (start + i) >= start && (start + i) <= end
      );
      const avgValue = (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1);
      const maxValue = Math.max(...values);
      const minValue = Math.min(...values);
      const reductionPercent = (((maxValue - minValue) / maxValue) * 100).toFixed(1);
      
      results.push(
        "",
        "üìä AN√ÅLISE ESTAT√çSTICA DO PER√çODO:",
        `‚Ä¢ M√©dia do per√≠odo: ${avgValue} √≥bitos/1.000 nascidos vivos`,
        `‚Ä¢ Maior taxa registrada: ${maxValue} (${Object.keys(baseValues)[Object.values(baseValues).indexOf(maxValue)]})`,
        `‚Ä¢ Menor taxa registrada: ${minValue} (${Object.keys(baseValues)[Object.values(baseValues).indexOf(minValue)]})`,
        `‚Ä¢ Redu√ß√£o total: ${reductionPercent}% no per√≠odo`,
        "",
        "üéØ METAS E COMPARA√á√ïES INTERNACIONAIS:",
        `‚Ä¢ Meta ODS 2030: 12 √≥bitos/1.000 nascidos vivos`,
        `‚Ä¢ Situa√ß√£o atual: ${end === 2024 ? 'Meta quase alcan√ßada' : 'Em progresso'}`,
        `‚Ä¢ Uruguai (2024): 8.2/1.000 | Chile (2024): 7.1/1.000`,
        `‚Ä¢ Argentina (2024): 9.8/1.000 | M√©xico (2024): 11.3/1.000`,
        "",
        "üîç AN√ÅLISE POR COMPONENTES:",
        `‚Ä¢ Mortalidade neonatal precoce (0-6 dias): 6.2/1.000 (50%)`,
        `‚Ä¢ Mortalidade neonatal tardia (7-27 dias): 2.1/1.000 (17%)`,
        `‚Ä¢ Mortalidade p√≥s-neonatal (28-364 dias): 4.1/1.000 (33%)`,
        "",
        "‚ö†Ô∏è PRINCIPAIS CAUSAS (2024):",
        `‚Ä¢ Afec√ß√µes perinatais: 52.3% dos √≥bitos`,
        `‚Ä¢ Malforma√ß√µes cong√™nitas: 21.8% dos √≥bitos`,
        `‚Ä¢ Doen√ßas respirat√≥rias: 8.9% dos √≥bitos`,
        `‚Ä¢ Causas externas: 4.2% dos √≥bitos`,
        `‚Ä¢ Doen√ßas infecciosas: 3.1% dos √≥bitos`,
        "",
        "üåç DISPARIDADES REGIONAIS (2024):",
        `‚Ä¢ Regi√£o Norte: 16.8/1.000 (35% acima da m√©dia nacional)`,
        `‚Ä¢ Regi√£o Nordeste: 15.2/1.000 (22% acima da m√©dia)`,
        `‚Ä¢ Regi√£o Centro-Oeste: 12.9/1.000 (4% acima da m√©dia)`,
        `‚Ä¢ Regi√£o Sudeste: 10.8/1.000 (13% abaixo da m√©dia)`,
        `‚Ä¢ Regi√£o Sul: 10.2/1.000 (18% abaixo da m√©dia)`,
        "",
        "üí° FATORES DETERMINANTES:",
        `‚Ä¢ Qualidade do pr√©-natal: cobertura de 92.5% (2024)`,
        `‚Ä¢ Parto institucional: 98.8% dos partos`,
        `‚Ä¢ Aleitamento materno exclusivo: 45.7% at√© 6 meses`,
        `‚Ä¢ Acesso a UTI neonatal: 2.8 leitos/1.000 nascidos vivos`,
        "",
        "üìã RECOMENDA√á√ïES ESTRAT√âGICAS:",
        `‚Ä¢ Fortalecer aten√ß√£o pr√©-natal nas regi√µes Norte/Nordeste`,
        `‚Ä¢ Expandir UTIs neonatais em munic√≠pios priorit√°rios`,
        `‚Ä¢ Capacita√ß√£o em reanima√ß√£o neonatal (protocolo 2024)`,
        `‚Ä¢ Implementar busca ativa de rec√©m-nascidos de risco`
      );
      
      return results;
    };
    
    // Fun√ß√£o para gerar dados de mortalidade materna
    const generateMortalidadeMaternaData = (start: number, end: number) => {
      const baseValues = {
        2015: 62.5, 2016: 64.8, 2017: 60.2, 2018: 59.1, 2019: 57.9,
        2020: 72.4, 2021: 73.8, 2022: 65.2, 2023: 68.0, 2024: 60.1
      };
      
      const results = [
        `üìä MORTALIDADE MATERNA NO BRASIL (${start}-${end}):`,
        "",
        "üìà S√âRIE HIST√ìRICA DETALHADA:",
      ];
      
      for (let year = start; year <= end; year++) {
        if (baseValues[year as keyof typeof baseValues]) {
          const value = baseValues[year as keyof typeof baseValues];
          const trend = year > start ? 
            (value > baseValues[(year-1) as keyof typeof baseValues] ? "‚ÜóÔ∏è" : "‚ÜòÔ∏è") : "üìç";
          results.push(`‚Ä¢ ${year}: ${value} √≥bitos/100.000 nascidos vivos ${trend}`);
        }
      }
      
      const values = Object.values(baseValues).filter((_, i) => 
        (start + i) >= start && (start + i) <= end
      );
      const avgValue = (values.reduce((a, b) => a + b, 0) / values.length).toFixed(1);
      
      results.push(
        "",
        "üîç AN√ÅLISE EPIDEMIOL√ìGICA AVAN√áADA:",
        `‚Ä¢ M√©dia do per√≠odo: ${avgValue} √≥bitos/100.000 nascidos vivos`,
        `‚Ä¢ Impacto COVID-19: aumento de 25% em 2020-2021`,
        `‚Ä¢ Recupera√ß√£o p√≥s-pandemia: redu√ß√£o de 18.6% (2021-2024)`,
        "",
        "‚ö†Ô∏è CAUSAS PRINCIPAIS (2024) - Classifica√ß√£o OMS:",
        `‚Ä¢ Transtornos hipertensivos: 22.8% (pr√©-ecl√¢mpsia/ecl√¢mpsia)`,
        `‚Ä¢ Hemorragias: 18.4% (p√≥s-parto/anteparto)`,
        `‚Ä¢ Infec√ß√µes puerperais: 14.2% (sepse puerperal)`,
        `‚Ä¢ Complica√ß√µes do trabalho de parto: 12.1%`,
        `‚Ä¢ Aborto: 8.9% (complica√ß√µes)`,
        `‚Ä¢ Embolismo: 7.3% (embolia pulmonar/amni√≥tica)`,
        `‚Ä¢ Outras causas diretas: 9.8%`,
        `‚Ä¢ Causas indiretas: 6.5% (doen√ßas pr√©-existentes)`,
        "",
        "üåç DISPARIDADES CR√çTICAS POR REGI√ÉO:",
        `‚Ä¢ Regi√£o Norte: 89.7/100.000 (49% acima da m√©dia)`,
        `‚Ä¢ Regi√£o Nordeste: 78.2/100.000 (30% acima)`,
        `‚Ä¢ Regi√£o Centro-Oeste: 63.1/100.000 (5% acima)`,
        `‚Ä¢ Regi√£o Sudeste: 48.9/100.000 (19% abaixo)`,
        `‚Ä¢ Regi√£o Sul: 44.2/100.000 (26% abaixo)`,
        "",
        "üë• PERFIL DEMOGR√ÅFICO DAS V√çTIMAS:",
        `‚Ä¢ Faixa et√°ria: 20-29 anos (42%), 30-39 anos (34%)`,
        `‚Ä¢ Escolaridade: ‚â§8 anos (58%), >8 anos (42%)`,
        `‚Ä¢ Ra√ßa/cor: pardas (48%), brancas (32%), pretas (18%)`,
        `‚Ä¢ Estado civil: solteiras (62%), casadas/uni√£o (38%)`,
        "",
        "üè• MOMENTO DO √ìBITO:",
        `‚Ä¢ Durante a gravidez: 28%`,
        `‚Ä¢ Durante o parto: 15%`,
        `‚Ä¢ At√© 42 dias p√≥s-parto: 49%`,
        `‚Ä¢ Entre 43-365 dias p√≥s-parto: 8%`,
        "",
        "üìä INDICADORES DE QUALIDADE DA ASSIST√äNCIA:",
        `‚Ä¢ Cobertura pr√©-natal (‚â•6 consultas): 78.9%`,
        `‚Ä¢ In√≠cio pr√©-natal no 1¬∫ trimestre: 75.2%`,
        `‚Ä¢ Parto ces√°reo: 55.8% (OMS recomenda <15%)`,
        `‚Ä¢ Near miss materno: 10.2/1.000 nascidos vivos`,
        "",
        "üéØ METAS E COMPARA√á√ïES:",
        `‚Ä¢ Meta ODS 2030: <30 √≥bitos/100.000 nascidos vivos`,
        `‚Ä¢ Situa√ß√£o: Brasil precisa reduzir 50% at√© 2030`,
        `‚Ä¢ Chile: 13.2/100.000 | Uruguai: 15.8/100.000`,
        `‚Ä¢ Argentina: 39.4/100.000 | Col√¥mbia: 45.6/100.000`,
        "",
        "üö® A√á√ïES ESTRAT√âGICAS PRIORIT√ÅRIAS:",
        `‚Ä¢ Qualificar aten√ß√£o pr√©-natal: protocolos baseados em evid√™ncia`,
        `‚Ä¢ Implementar "Hora Dourada" (cuidados primeira hora)`,
        `‚Ä¢ Fortalecer refer√™ncia/contrarrefer√™ncia obst√©trica`,
        `‚Ä¢ Ampliar UTIs materna em regi√µes cr√≠ticas`,
        `‚Ä¢ Capacita√ß√£o em emerg√™ncias obst√©tricas (ALSO/ACLS)`
      );
      
      return results;
    };

    // PROCESSAR CONSULTA BASEADO EM M√öLTIPLOS INDICADORES E CORRELA√á√ïES
    if (isMultiIndicator && hasCorrelation) {
      // An√°lise de correla√ß√£o entre mortalidade materna e infantil
      if (indicators.mortalidadeMaterna && indicators.mortalidadeInfantil) {
        return generateCorrelationMortalidades(startYear, endYear);
      }
      
      // An√°lise de correla√ß√£o dengue vs temperatura
      if (indicators.dengue && indicators.temperatura) {
        return generateCorrelationDengueTemperatura(startYear, endYear);
      }
      
      // An√°lise de correla√ß√£o vacina√ß√£o vs incid√™ncia (exemplo gen√©rico)
      if (indicators.vacinacao && (indicators.dengue || indicators.mortalidadeInfantil)) {
        return [
          `üíâ AN√ÅLISE DE CORRELA√á√ÉO: VACINA√á√ÉO vs INCID√äNCIA DE DOEN√áAS (${startYear}-${endYear})`,
          "",
          "üìä CORRELA√á√ÉO INVERSA IDENTIFICADA:",
          `‚Ä¢ Cobertura vacinal ‚Üë = Incid√™ncia de doen√ßas ‚Üì`,
          `‚Ä¢ Coeficiente de correla√ß√£o: r = -0.78 (correla√ß√£o negativa forte)`,
          `‚Ä¢ Efetividade vacinal: 85-95% dependendo da vacina`,
          "",
          "üéØ EVID√äNCIAS DE EFETIVIDADE:",
          `‚Ä¢ Cada 10% de aumento na cobertura vacinal reduz 15% na incid√™ncia`,
          `‚Ä¢ Efeito rebanho: prote√ß√£o indireta a partir de 70% de cobertura`,
          `‚Ä¢ Impacto maior em popula√ß√µes vulner√°veis (crian√ßas, idosos)`,
          "",
          "üìà AN√ÅLISE TEMPORAL:",
          `‚Ä¢ 2015-2019: Correla√ß√£o negativa est√°vel (r = -0.82)`,
          `‚Ä¢ 2020-2021: Disrupted by COVID-19 pandemic`,
          `‚Ä¢ 2022-2024: Recupera√ß√£o gradual da correla√ß√£o (r = -0.75)`,
          "",
          "‚ö†Ô∏è FATORES CONFUNDIDORES:",
          `‚Ä¢ Qualidade da cadeia de frio`,
          `‚Ä¢ Varia√ß√µes sazonais na circula√ß√£o viral`,
          `‚Ä¢ Mudan√ßas demogr√°ficas populacionais`,
          `‚Ä¢ Emerg√™ncia de novas variantes/cepas`
        ];
      }
      
      // An√°lise gen√©rica para outras correla√ß√µes
      return [
        `üî¨ AN√ÅLISE MULTIVARIADA: ${detectedIndicators.map(([name]) => name.toUpperCase()).join(' vs ')} (${startYear}-${endYear})`,
        "",
        "üìä AN√ÅLISE DE CORRELA√á√ÉO DETECTADA:",
        `‚Ä¢ Indicadores identificados: ${detectedIndicators.length}`,
        `‚Ä¢ Tipo de an√°lise solicitada: ${hasCorrelation ? 'Correlacional' : 'Comparativa'}`,
        "",
        "üîç METODOLOGIA ESTAT√çSTICA APLICADA:",
        `‚Ä¢ C√°lculo de coeficientes de correla√ß√£o de Pearson`,
        `‚Ä¢ An√°lise de regress√£o linear simples`,
        `‚Ä¢ Teste de signific√¢ncia estat√≠stica (p<0.05)`,
        `‚Ä¢ Identifica√ß√£o de vari√°veis confundidoras`,
        "",
        "üìà INTERPRETA√á√ÉO EPIDEMIOL√ìGICA:",
        `‚Ä¢ Correla√ß√µes identificadas permitem insights sobre causalidade`,
        `‚Ä¢ An√°lise temporal revela padr√µes e tend√™ncias`,
        `‚Ä¢ Implica√ß√µes para pol√≠ticas p√∫blicas integradas`,
        "",
        "‚ö†Ô∏è LIMITA√á√ïES METODOL√ìGICAS:",
        `‚Ä¢ Correla√ß√£o n√£o implica causalidade`,
        `‚Ä¢ Necess√°rio controle de vari√°veis confundidoras`,
        `‚Ä¢ An√°lise baseada em dados agregados (limita√ß√£o ecol√≥gica)`,
        `‚Ä¢ Recomenda-se estudos longitudinais para confirma√ß√£o causal`
      ];
    }

    // Processar consulta individual (indicador √∫nico)
    if (indicators.mortalidadeInfantil) {
      return generateMortalidadeInfantilData(startYear, endYear);
    }
    
    if (indicators.mortalidadeMaterna) {
      return generateMortalidadeMaternaData(startYear, endYear);
    }
    
    if (indicators.dengue) {
      // Para dengue, gerar dados avan√ßados
      const dengueResults = [
        `üìä DENGUE NO BRASIL (${startYear}-${endYear}):`,
        "",
        "üìà EVOLU√á√ÉO EPIDEMIOL√ìGICA:",
        `‚Ä¢ 2015: 1.688.688 casos | 863 √≥bitos`,
        `‚Ä¢ 2016: 1.496.282 casos | 796 √≥bitos`,
        `‚Ä¢ 2017: 249.056 casos | 163 √≥bitos`,
        `‚Ä¢ 2018: 265.934 casos | 176 √≥bitos`,
        `‚Ä¢ 2019: 1.544.987 casos | 782 √≥bitos`,
        `‚Ä¢ 2020: 979.764 casos | 456 √≥bitos`,
        `‚Ä¢ 2021: 544.192 casos | 315 √≥bitos`,
        `‚Ä¢ 2022: 1.398.475 casos | 1.053 √≥bitos`,
        `‚Ä¢ 2023: 1.658.816 casos | 1.094 √≥bitos`,
        `‚Ä¢ 2024: 6.107.422 casos | 5.967 √≥bitos`,
        "",
        "üî¨ AN√ÅLISE SOROT√çPICA AVAN√áADA:",
        `‚Ä¢ Ciclos epid√™micos: padr√£o 3-5 anos por sorotipo`,
        `‚Ä¢ DENV-1: dominante 2016-2018, retorno em 2024`,
        `‚Ä¢ DENV-2: emergente 2019-2024 (formas graves ‚Üë)`,
        `‚Ä¢ DENV-3: baixa circula√ß√£o (alerta para reintrodu√ß√£o)`,
        `‚Ä¢ DENV-4: circula√ß√£o espor√°dica`,
        "",
        "‚ö†Ô∏è PERFIL DE GRAVIDADE (2024):",
        `‚Ä¢ Taxa de letalidade geral: 0.098%`,
        `‚Ä¢ Dengue com sinais de alarme: 12.8% dos casos`,
        `‚Ä¢ Dengue grave: 1.2% dos casos`,
        `‚Ä¢ Faixa et√°ria mais letal: >60 anos (0.34%)`,
        "",
        "üå°Ô∏è FATORES CLIM√ÅTICOS E SAZONALIDADE:",
        `‚Ä¢ Temperatura √≥tima: 26-29¬∞C (desenvolvimento Aedes)`,
        `‚Ä¢ Precipita√ß√£o: 80-150mm/m√™s (criadouros)`,
        `‚Ä¢ Per√≠odo cr√≠tico: dezembro-maio`,
        `‚Ä¢ El Ni√±o 2023-2024: intensificou surto`,
        "",
        "üèôÔ∏è URBANIZA√á√ÉO E DENGUE:",
        `‚Ä¢ Correla√ß√£o com densidade populacional: r=0.78`,
        `‚Ä¢ Capitais concentram 68% dos casos`,
        `‚Ä¢ Periferia urbana: maior incid√™ncia`,
        `‚Ä¢ Saneamento inadequado: fator cr√≠tico`
      ];
      
      return dengueResults;
    }
    
    // Resultado gen√©rico mais sofisticado
    return [
      `üìä PANORAMA EPIDEMIOL√ìGICO BRASIL (${startYear}-${endYear}):`,
      "",
      "üéØ PRINCIPAIS INDICADORES DE SA√öDE:",
      `‚Ä¢ Mortalidade infantil: 12.4/1.000 (2024) - Redu√ß√£o 17% desde 2015`,
      `‚Ä¢ Mortalidade materna: 60.1/100.000 (2024) - Meta ODS: <30/100.000`,
      `‚Ä¢ Esperan√ßa de vida: 76.4 anos (2024) - Aumento 1.8 anos desde 2015`,
      `‚Ä¢ Cobertura vacinal: 87.3% (2024) - Recupera√ß√£o p√≥s-COVID`,
      "",
      "üìà TEND√äNCIAS TEMPORAIS IDENTIFICADAS:",
      `‚Ä¢ Redu√ß√£o mortalidade infantil: -2.3% ao ano`,
      `‚Ä¢ Oscila√ß√£o mortalidade materna: impacto COVID-19 significativo`,
      `‚Ä¢ Arboviroses: ciclos epid√™micos intensificados`,
      `‚Ä¢ Doen√ßas cr√¥nicas: crescimento 15% (2015-2024)`,
      "",
      "üåç CONTEXTO REGIONAL:",
      `‚Ä¢ Disparidades Norte/Nordeste vs Sul/Sudeste persistem`,
      `‚Ä¢ Munic√≠pios <20k hab: indicadores 25% piores`,
      `‚Ä¢ √Åreas rurais: acesso limitado a servi√ßos especializados`
    ];
  };

  const handleSearch = async () => {
    if (!query.trim()) {
      toast({
        title: "Digite sua consulta",
        description: "Por favor, digite uma consulta antes de buscar.",
        variant: "destructive"
      });
      return;
    }

    setIsLoading(true);
    
    // Simular busca com IA
    try {
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      const mockResults = generateRelevantResults(query);
      setResults(mockResults);
      
      toast({
        title: "Busca conclu√≠da",
        description: "Encontrados dados relacionados √† sua consulta."
      });
      
      // Preparar dados para o relat√≥rio
      setReportData({
        query: query,
        results: mockResults,
        timestamp: new Date().toISOString()
      });
    } catch (error) {
      toast({
        title: "Erro na busca",
        description: "N√£o foi poss√≠vel processar sua consulta.",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  const generateReport = () => {
    if (reportData) {
      setShowReport(true);
    } else {
      toast({
        title: "Nenhum dado dispon√≠vel",
        description: "Fa√ßa uma busca primeiro para gerar o relat√≥rio.",
        variant: "destructive"
      });
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter') {
      handleSearch();
    }
  };

  return (
    <div className="w-full max-w-4xl mx-auto">
      <Card className="p-8">
        <h2 className="text-2xl font-bold mb-4">Pesquisa com IA</h2>
        <p className="text-muted-foreground mb-6">
          Use linguagem natural para buscar indicadores de sa√∫de
        </p>
        
        <div className="flex gap-4">
          <Input 
            placeholder="Digite sua consulta aqui..."
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            onKeyPress={handleKeyPress}
            className="flex-1"
            disabled={isLoading}
          />
          <Button onClick={handleSearch} disabled={isLoading}>
            {isLoading ? "Buscando..." : "Buscar"}
          </Button>
        </div>
        
        {results.length > 0 && (
          <div className="mt-6 p-4 bg-muted rounded-lg">
            <div className="flex justify-between items-center mb-3">
              <h3 className="font-semibold">Resultados da busca:</h3>
              <Button onClick={generateReport} variant="default" size="sm">
                üìä Gerar Relat√≥rio Profissional
              </Button>
            </div>
            <div className="space-y-2">
              {results.map((result, index) => (
                <p key={index} className="text-sm">
                  {result}
                </p>
              ))}
            </div>
          </div>
        )}
        
        {results.length === 0 && !isLoading && (
          <div className="mt-6 p-4 bg-muted rounded-lg">
            <p className="text-sm text-muted-foreground">
              Digite uma consulta e clique em "Buscar" para ver os resultados.
            </p>
          </div>
        )}
      </Card>
      
      {showReport && reportData && (
        <HealthReport 
          data={reportData} 
          onClose={() => setShowReport(false)} 
        />
      )}
    </div>
  );
};