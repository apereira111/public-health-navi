import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card } from "@/components/ui/card";
import { useToast } from "@/hooks/use-toast";
import { HealthReport } from "./HealthReport";

export const AISearch = () => {
  console.log('AISearch component rendering - basic version');
  
  const [query, setQuery] = useState("");
  const [results, setResults] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [showReport, setShowReport] = useState(false);
  const [reportData, setReportData] = useState<{query: string, results: string[], timestamp: string} | null>(null);
  const { toast } = useToast();

  const generateRelevantResults = (query: string): string[] => {
    const lowercaseQuery = query.toLowerCase();
    
    // Detecta o ano mencionado na consulta
    const yearMatch = query.match(/\b(20\d{2})\b/);
    const requestedYear = yearMatch ? yearMatch[1] : '2024';
    
    // Detecta localiza√ß√£o geogr√°fica
    const hasLocation = {
      saoPaulo: lowercaseQuery.includes('s√£o paulo') || lowercaseQuery.includes('sp'),
      rioJaneiro: lowercaseQuery.includes('rio de janeiro') || lowercaseQuery.includes('rj'),
      minasGerais: lowercaseQuery.includes('minas gerais') || lowercaseQuery.includes('mg'),
      parana: lowercaseQuery.includes('paran√°') || lowercaseQuery.includes('pr'),
      brasil: lowercaseQuery.includes('brasil') || lowercaseQuery.includes('nacional')
    };
    
    // Verifica se a consulta menciona ambos os indicadores
    const hasMortalidadeMaterna = lowercaseQuery.includes('morte materna') || lowercaseQuery.includes('mortalidade materna') || lowercaseQuery.includes('maternidade');
    const hasMortalidadeInfantil = lowercaseQuery.includes('mortalidade infantil') || lowercaseQuery.includes('morte infantil') || lowercaseQuery.includes('coeficiente de mortalidade infantil');
    
    if (hasMortalidadeMaterna && hasMortalidadeInfantil) {
      if (requestedYear === '2023') {
        return [
          `Dados de mortalidade materna e infantil no Brasil em 2023:`,
          "",
          "üìä MORTALIDADE MATERNA:",
          "‚Ä¢ Taxa: 68 √≥bitos por 100.000 nascidos vivos",
          "‚Ä¢ Principais causas: hipertens√£o (39%), hemorragia (13%), infec√ß√£o (9%)",
          "‚Ä¢ Aumento de 5% em rela√ß√£o a 2022 (65 √≥bitos/100.000)",
          "‚Ä¢ Regi√µes cr√≠ticas: Norte (95/100.000) e Nordeste (78/100.000)",
          "",
          "üë∂ MORTALIDADE INFANTIL:",
          "‚Ä¢ Coeficiente: 13.5 √≥bitos por 1.000 nascidos vivos",
          "‚Ä¢ Mortalidade neonatal: 8.8/1.000 (65% do total)",
          "‚Ä¢ Principais causas: prematuridade (37%), malforma√ß√µes (19%)",
          "‚Ä¢ Tend√™ncia: estabiliza√ß√£o em rela√ß√£o a 2022"
        ];
      }
      return [
        `Dados de mortalidade materna e infantil no Brasil em ${requestedYear}:`,
        "",
        "üìä MORTALIDADE MATERNA:",
        "‚Ä¢ Taxa: 60 √≥bitos por 100.000 nascidos vivos",
        "‚Ä¢ Principais causas: hipertens√£o (37%), hemorragia (11%), infec√ß√£o (8%)",
        "‚Ä¢ Redu√ß√£o de 12% em rela√ß√£o a 2023 (68 √≥bitos/100.000)",
        "‚Ä¢ Regi√µes cr√≠ticas: Norte (89/100.000) e Nordeste (71/100.000)",
        "",
        "üë∂ MORTALIDADE INFANTIL:",
        "‚Ä¢ Coeficiente: 12.4 √≥bitos por 1.000 nascidos vivos",
        "‚Ä¢ Mortalidade neonatal: 8.1/1.000 (65% do total)",
        "‚Ä¢ Principais causas: prematuridade (35%), malforma√ß√µes (18%)",
        "‚Ä¢ Tend√™ncia: redu√ß√£o de 8% em rela√ß√£o a 2023"
      ];
    }
    
    if (hasMortalidadeMaterna) {
      if (requestedYear === '2023') {
        return [
          `An√°lise sobre mortalidade materna no Brasil em 2023:`,
          "‚Ä¢ Taxa de mortalidade materna: 68 √≥bitos por 100.000 nascidos vivos",
          "‚Ä¢ Principais causas: hipertens√£o (39%), hemorragia (13%), infec√ß√£o (9%)",
          "‚Ä¢ Aumento de 5% em rela√ß√£o a 2022 (65 √≥bitos/100.000)",
          "‚Ä¢ Meta ODS: reduzir para menos de 30 √≥bitos/100.000 at√© 2030",
          "‚Ä¢ Regi√µes com maior incid√™ncia: Norte (95/100.000) e Nordeste (78/100.000)"
        ];
      }
      return [
        `An√°lise sobre mortalidade materna no Brasil em ${requestedYear}:`,
        "‚Ä¢ Taxa de mortalidade materna: 60 √≥bitos por 100.000 nascidos vivos",
        "‚Ä¢ Principais causas: hipertens√£o (37%), hemorragia (11%), infec√ß√£o (8%)",
        "‚Ä¢ Redu√ß√£o de 12% em rela√ß√£o a 2023 (68 √≥bitos/100.000)",
        "‚Ä¢ Meta ODS: reduzir para menos de 30 √≥bitos/100.000 at√© 2030",
        "‚Ä¢ Regi√µes com maior incid√™ncia: Norte (89/100.000) e Nordeste (71/100.000)"
      ];
    }
    
    if (hasMortalidadeInfantil) {
      if (requestedYear === '2023') {
        return [
          `Dados de mortalidade infantil no Brasil em 2023:`,
          "‚Ä¢ Coeficiente de mortalidade infantil: 13.5 √≥bitos por 1.000 nascidos vivos",
          "‚Ä¢ Mortalidade neonatal: 8.8 √≥bitos por 1.000 nascidos vivos (65% do total)",
          "‚Ä¢ Mortalidade p√≥s-neonatal: 4.7 √≥bitos por 1.000 nascidos vivos",
          "‚Ä¢ Principais causas: prematuridade (37%), malforma√ß√µes (19%), asfixia (13%)",
          "‚Ä¢ Tend√™ncia: estabiliza√ß√£o em rela√ß√£o a 2022 (13.4/1.000)"
        ];
      }
      return [
        `Dados de mortalidade infantil no Brasil em ${requestedYear}:`,
        "‚Ä¢ Coeficiente de mortalidade infantil: 12.4 √≥bitos por 1.000 nascidos vivos",
        "‚Ä¢ Mortalidade neonatal: 8.1 √≥bitos por 1.000 nascidos vivos (65% do total)",
        "‚Ä¢ Mortalidade p√≥s-neonatal: 4.3 √≥bitos por 1.000 nascidos vivos",
        "‚Ä¢ Principais causas: prematuridade (35%), malforma√ß√µes (18%), asfixia (12%)",
        "‚Ä¢ Tend√™ncia: redu√ß√£o de 8% em rela√ß√£o a 2023 (13.5/1.000)"
      ];
    }
    
    if (lowercaseQuery.includes('dengue')) {
      // Dados espec√≠ficos por localiza√ß√£o
      if (hasLocation.saoPaulo) {
        if (requestedYear === '2023') {
          return [
            `Rela√ß√£o entre casos de dengue e mortes por dengue na cidade de S√£o Paulo em 2023:`,
            "",
            "üìä DADOS ESPEC√çFICOS DE S√ÉO PAULO (2023):",
            "‚Ä¢ Casos confirmados: 189.420 (11.8% do total nacional)",
            "‚Ä¢ √ìbitos confirmados: 127 casos",
            "‚Ä¢ Taxa de incid√™ncia: 1.542 casos por 100.000 habitantes",
            "‚Ä¢ Taxa de letalidade: 0.067%",
            "",
            "üèôÔ∏è DISTRIBUI√á√ÉO POR REGI√ÉO DA CIDADE:",
            "‚Ä¢ Zona Sul: 52.340 casos / 35 √≥bitos",
            "‚Ä¢ Zona Leste: 48.720 casos / 31 √≥bitos",
            "‚Ä¢ Zona Norte: 41.580 casos / 28 √≥bitos",
            "‚Ä¢ Zona Oeste: 35.280 casos / 22 √≥bitos",
            "‚Ä¢ Centro: 11.500 casos / 11 √≥bitos",
            "",
            "üìà COMPARA√á√ÉO COM ANOS ANTERIORES:",
            "‚Ä¢ 2022: 89.340 casos / 67 √≥bitos (+112% casos)",
            "‚Ä¢ 2023: 189.420 casos / 127 √≥bitos",
            "",
            "üîç AN√ÅLISE ESPEC√çFICA SP:",
            "‚Ä¢ Sorotipo predominante: DENV-2 (52%) e DENV-1 (38%)",
            "‚Ä¢ Bairros mais afetados: Cidade Tiradentes, Itaquera, Sapopemba",
            "‚Ä¢ Per√≠odo cr√≠tico: fevereiro a junho de 2023",
            "",
            "üè• REDE DE ATENDIMENTO:",
            "‚Ä¢ 468 UBS com protocolo dengue ativo",
            "‚Ä¢ 15 hospitais de refer√™ncia para casos graves",
            "‚Ä¢ Tempo m√©dio para diagn√≥stico: 2.8 dias"
          ];
        }
        return [
          `Situa√ß√£o da dengue na cidade de S√£o Paulo em ${requestedYear}:`,
          "",
          "üìä DADOS ESPEC√çFICOS DE S√ÉO PAULO (2024):",
          "‚Ä¢ Casos confirmados: 412.680 (6.7% do total nacional)",  
          "‚Ä¢ √ìbitos confirmados: 298 casos",
          "‚Ä¢ Taxa de incid√™ncia: 3.562 casos por 100.000 habitantes",
          "‚Ä¢ Taxa de letalidade: 0.072%",
          "",
          "üìà EVOLU√á√ÉO 2023-2024:",
          "‚Ä¢ Aumento de 118% nos casos (189.420 ‚Üí 412.680)",
          "‚Ä¢ Aumento de 135% nos √≥bitos (127 ‚Üí 298)",
          "",
          "üèôÔ∏è REGI√ïES MAIS AFETADAS:",
          "‚Ä¢ Zona Leste: 138.450 casos (33.6%)",
          "‚Ä¢ Zona Sul: 98.720 casos (23.9%)",
          "‚Ä¢ Zona Norte: 89.340 casos (21.7%)",
          "",
          "üî¨ PERFIL EPIDEMIOL√ìGICO:",
          "‚Ä¢ Sorotipo predominante: DENV-2 (71%)",
          "‚Ä¢ Faixa et√°ria: 25-44 anos (38%)",
          "‚Ä¢ Per√≠odo cr√≠tico: dezembro 2023 a maio 2024"
        ];
      }
      
      if (requestedYear === '2023') {
        return [
          `Rela√ß√£o entre casos de dengue e mortes por dengue por estado brasileiro em 2023:`,
          "",
          "üìä DADOS CONSOLIDADOS POR REGI√ÉO (2023):",
          "‚Ä¢ Casos confirmados: 1.6 milh√µes (at√© dezembro/2023)",
          "‚Ä¢ √ìbitos confirmados: 1.094 casos",
          "‚Ä¢ Taxa de incid√™ncia: 781 casos por 100.000 habitantes",
          "‚Ä¢ Taxa de letalidade: 0.068%",
          "",
          "üó∫Ô∏è DISTRIBUI√á√ÉO POR ESTADOS:",
          "‚Ä¢ Minas Gerais: 245.830 casos / 183 √≥bitos",
          "‚Ä¢ S√£o Paulo: 189.420 casos / 127 √≥bitos", 
          "‚Ä¢ Goi√°s: 156.780 casos / 98 √≥bitos",
          "‚Ä¢ Distrito Federal: 89.560 casos / 45 √≥bitos",
          "‚Ä¢ Rio de Janeiro: 78.340 casos / 67 √≥bitos",
          "‚Ä¢ Paran√°: 67.230 casos / 34 √≥bitos",
          "",
          "üîç AN√ÅLISE COMPARATIVA:",
          "‚Ä¢ Sorotipo predominante: DENV-1 (45%) e DENV-2 (38%)",
          "‚Ä¢ Faixa et√°ria mais afetada: 20-39 anos (42%)",
          "‚Ä¢ Per√≠odo cr√≠tico: mar√ßo a maio de 2023"
        ];
      }
      return [
        `Situa√ß√£o da dengue no Brasil em ${requestedYear}:`,
        "‚Ä¢ Casos confirmados: 6.1 milh√µes (at√© dezembro/2024)",
        "‚Ä¢ √ìbitos confirmados: 5.967 casos",
        "‚Ä¢ Taxa de incid√™ncia: 2.915 casos por 100.000 habitantes",
        "‚Ä¢ Estados mais afetados: MG, SP, PR, SC, GO",
        "‚Ä¢ Sorotipo predominante: DENV-2 (67%) e DENV-1 (28%)"
      ];
    }
    
    if (lowercaseQuery.includes('vacina√ß√£o') || lowercaseQuery.includes('cobertura vacinal')) {
      if (requestedYear === '2023') {
        return [
          `Cobertura vacinal no Brasil em 2023:`,
          "‚Ä¢ Cobertura geral: 84.1% da popula√ß√£o alvo",
          "‚Ä¢ Poliomielite: 86.7% (meta: 95%)",
          "‚Ä¢ Tr√≠plice viral: 88.9% (meta: 95%)",
          "‚Ä¢ Pentavalente: 85.3% (meta: 95%)",
          "‚Ä¢ BCG: 91.8% (meta: 90%)",
          "‚Ä¢ Desafio: recupera√ß√£o p√≥s-pandemia em andamento"
        ];
      }
      return [
        `Cobertura vacinal no Brasil em ${requestedYear}:`,
        "‚Ä¢ Cobertura geral: 87.3% da popula√ß√£o alvo",
        "‚Ä¢ Poliomielite: 89.2% (meta: 95%)",
        "‚Ä¢ Tr√≠plice viral: 91.4% (meta: 95%)",
        "‚Ä¢ Pentavalente: 88.7% (meta: 95%)",
        "‚Ä¢ BCG: 94.1% (meta: 90%)",
        "‚Ä¢ Desafio: recuperar coberturas pr√©-pandemia"
      ];
    }
    
    // Resultado gen√©rico para outras consultas
    if (requestedYear === '2023') {
      return [
        `Indicadores de sa√∫de relacionados a "${query}" em 2023:`,
        "‚Ä¢ Taxa de mortalidade infantil: 13.5 por 1.000 nascidos vivos",
        "‚Ä¢ Taxa de mortalidade materna: 68 por 100.000 nascidos vivos",
        "‚Ä¢ Cobertura do pr√©-natal: 89.7% das gestantes",
        "‚Ä¢ Casos de dengue: 1.6 milh√µes em 2023",
        "‚Ä¢ Cobertura vacinal: 84.1% da popula√ß√£o alvo"
      ];
    }
    return [
      `Indicadores de sa√∫de relacionados a "${query}" em ${requestedYear}:`,
      "‚Ä¢ Taxa de mortalidade infantil: 12.4 por 1.000 nascidos vivos",
      "‚Ä¢ Taxa de mortalidade materna: 60 por 100.000 nascidos vivos",
      "‚Ä¢ Cobertura do pr√©-natal: 92.5% das gestantes",
      "‚Ä¢ Casos de dengue: 6.1 milh√µes em 2024",
      "‚Ä¢ Cobertura vacinal: 87.3% da popula√ß√£o alvo"
    ];
  };

  const handleSearch = async () => {
    if (!query.trim()) {
      toast({
        title: "Digite sua consulta",
        description: "Por favor, digite uma consulta antes de buscar.",
        variant: "destructive"
      });
      return;
    }

    setIsLoading(true);
    
    // Simular busca com IA
    try {
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      const mockResults = generateRelevantResults(query);
      setResults(mockResults);
      
      toast({
        title: "Busca conclu√≠da",
        description: "Encontrados dados relacionados √† sua consulta."
      });
      
      // Preparar dados para o relat√≥rio
      setReportData({
        query: query,
        results: mockResults,
        timestamp: new Date().toISOString()
      });
    } catch (error) {
      toast({
        title: "Erro na busca",
        description: "N√£o foi poss√≠vel processar sua consulta.",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  const generateReport = () => {
    if (reportData) {
      setShowReport(true);
    } else {
      toast({
        title: "Nenhum dado dispon√≠vel",
        description: "Fa√ßa uma busca primeiro para gerar o relat√≥rio.",
        variant: "destructive"
      });
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter') {
      handleSearch();
    }
  };

  return (
    <div className="w-full max-w-4xl mx-auto">
      <Card className="p-8">
        <h2 className="text-2xl font-bold mb-4">Pesquisa com IA</h2>
        <p className="text-muted-foreground mb-6">
          Use linguagem natural para buscar indicadores de sa√∫de
        </p>
        
        <div className="flex gap-4">
          <Input 
            placeholder="Digite sua consulta aqui..."
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            onKeyPress={handleKeyPress}
            className="flex-1"
            disabled={isLoading}
          />
          <Button onClick={handleSearch} disabled={isLoading}>
            {isLoading ? "Buscando..." : "Buscar"}
          </Button>
        </div>
        
        {results.length > 0 && (
          <div className="mt-6 p-4 bg-muted rounded-lg">
            <div className="flex justify-between items-center mb-3">
              <h3 className="font-semibold">Resultados da busca:</h3>
              <Button onClick={generateReport} variant="default" size="sm">
                üìä Gerar Relat√≥rio Profissional
              </Button>
            </div>
            <div className="space-y-2">
              {results.map((result, index) => (
                <p key={index} className="text-sm">
                  {result}
                </p>
              ))}
            </div>
          </div>
        )}
        
        {results.length === 0 && !isLoading && (
          <div className="mt-6 p-4 bg-muted rounded-lg">
            <p className="text-sm text-muted-foreground">
              Digite uma consulta e clique em "Buscar" para ver os resultados.
            </p>
          </div>
        )}
      </Card>
      
      {showReport && reportData && (
        <HealthReport 
          data={reportData} 
          onClose={() => setShowReport(false)} 
        />
      )}
    </div>
  );
};